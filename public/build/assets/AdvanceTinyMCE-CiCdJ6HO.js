class c{constructor(){this.editor=null,this.initialized=!1}init(){(this.initialized||this.editor)&&this.destroyEditor(),!(!document.querySelector("#text-editor")||this.initialized)&&this.waitForAlpine().then(()=>{const n=document.createElement("script");n.src="https://cdnjs.cloudflare.com/ajax/libs/tinymce/5.9.1/tinymce.min.js",n.referrerPolicy="origin",n.onload=()=>{window.tinymce.init({selector:"#text-editor",height:750,menubar:!0,plugins:["fullpage","advlist","autolink","lists","link","image","charmap","anchor","searchreplace","visualblocks","code","fullscreen","insertdatetime","media","table","preview","help","wordcount","codesample","directionality","emoticons","nonbreaking","pagebreak","quickbars","save"],toolbar:"fullscreen code codesample accordion addcomment aidialog aishortcuts aligncenter alignjustify alignleft alignnone alignright | anchor | blockquote blocks | backcolor | bold | casechange checklist copy cut | fontfamily fontsize forecolor  | italic | language | lineheight | newdocument | outdent | paste pastetext | print exportpdf exportword importword | redo | remove removeformat | selectall | strikethrough | styles | subscript superscript underline | undo | visualaid | a11ycheck advtablerownumbering revisionhistory typopgraphy anchor restoredraft casechange charmap checklist  addcomment showcomments ltr rtl editimage fliph flipv imageoptions rotateleft rotateright emoticons export footnotes footnotesupdate formatpainter  help image insertdatetime link openlink unlink bullist numlist media mergetags mergetags_list nonbreaking pagebreak pageembed permanentpen preview quickimage quicklink quicktable cancel save searchreplace showcomments spellcheckdialog spellchecker |  template typography | insertfile inserttemplate addtemplate | visualblocks visualchars | wordcount",content_style:"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }",extended_valid_elements:"a[href|target|rel|class|id|title|name]",code_dialog_height:600,code_dialog_width:800,toolbar_sticky:!1,setup:t=>{this.editor=t,t.on("BeforeSetContent",function(e){e.content=e.content.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,""),e.content=e.content.replace(/\son\w+\s*=\s*(['"]).*?\1/gi,"")});const s=document.getElementById("messageForm"),a=document.getElementById("editor");if(s&&window.Alpine&&Alpine.$data){const e=a?a.value:Alpine.$data(s).localMessageHtml;e&&t.on("init",()=>{this.setContent(e),this.updatePreview(e),a&&(a.value=e,a.dispatchEvent(new Event("input")))})}t.on("input change",()=>{const e=this.getContent();this.updatePreview(e);const o=document.getElementById("messageForm");o&&window.Alpine&&Alpine.$data&&(Alpine.$data(o).localMessageHtml=e)}),t.on("keyup",()=>{const e=this.getContent();this.updatePreview(e);const o=document.getElementById("messageForm");o&&window.Alpine&&Alpine.$data&&(Alpine.$data(o).localMessageHtml=e)}),t.on("input change keyup",()=>{const e=this.getContent();this.updatePreview(e);const o=document.getElementById("messageForm");o&&window.Alpine&&Alpine.$data&&(Alpine.$data(o).localMessageHtml=e);const r=new CustomEvent("editor-content-updated",{detail:{content:e}});window.dispatchEvent(r)})},init_instance_callback:t=>{this.initialized=!0,console.log("Editor initialized:",t)}})},document.head.appendChild(n)})}waitForAlpine(){return new Promise(i=>{window.Alpine?i():(document.addEventListener("alpine:init",()=>i()),setTimeout(i,1e3))})}destroyEditor(){this.editor&&(window.tinymce&&window.tinymce.remove("#editor"),this.editor=null,this.initialized=!1)}getContent(){return this.editor?this.editor.getContent():""}setContent(i){this.editor&&this.editor.setContent(i)}updatePreview(i){const n=document.getElementById("preview-frame");if(n)try{const t=n.contentDocument||n.contentWindow.document;t.open(),t.write(i),t.close()}catch(t){console.error("Error updating preview:",t)}}}const l=new c;document.addEventListener("DOMContentLoaded",()=>{l.init()});window.advanceCodeEditor=l;
